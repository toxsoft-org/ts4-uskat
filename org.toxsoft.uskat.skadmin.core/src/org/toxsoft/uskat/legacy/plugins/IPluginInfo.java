package org.toxsoft.uskat.legacy.plugins;

import org.toxsoft.core.tslib.coll.IList;
import org.toxsoft.core.tslib.coll.primtypes.IStringMap;
import org.toxsoft.core.tslib.utils.TsVersion;

/**
 * Информация о подключаемом модуле, которая хранится в манифесте JAR-файла.
 * <p>
 * Описание работы с плагинами см. в {@link IPluginsHardConstants}.
 *
 * @author goga
 */
public interface IPluginInfo
    extends IPluginBasicInfo {

  /**
   * Возвращает путь к JAR-файлу с данным подключаемым модулем.
   *
   * @return полный путь к файлу
   */
  String pluginJarFileName();

  /**
   * Имя класса подключаемого модуля.<br>
   * По этому имени загружается класс модуля и конструктором без аргументов создается экземпляр модуля.
   *
   * @return полное имя класса подключаемого модуля
   */
  String pluginClassName();

  /**
   * Информация о зависимости от отдельного модуля.
   *
   * @author goga
   */
  interface IDependencyInfo
      extends IPluginBasicInfo {

    /**
     * Метод базового интерфейса озвращает требуемую версию подключаемого модуля.
     *
     * @return ITsVersion - требуемая версия модуля
     */
    @Override
    TsVersion pluginVersion();

    /**
     * Возвращает, требуется ли точное соответствие указанной версии.<br>
     * Если точное соответствие требуется, то зависимость считается разрешенной, если совпадает и основной, и
     * дополнительные номера версии установленных и требуемых модулей. В случае отсутствия необходимости точного
     * совпадения, зависимость считается разрешенной, если установленная версия не ниже запрошенной.
     *
     * @return true - требуется точное соответствие версии, false - устроит и модуль с более высокой версией
     */
    boolean isExactVersionNeeded();

  }

  /**
   * Получить информацию о модулях, от которых зависит данный подключаемый модуль.<br>
   * Для того, чтобы подключаемый модуль мог быть использован, перед созданием экземпляра модуля, в системе должны быть
   * известны модули от которых зависит данный подключаемый модуль. При этом, должно быть выполенно условие по
   * соответсию версии (см. {@link IDependencyInfo#isExactVersionNeeded()}).
   *
   * @return Iterable&lt;String&gt; - поставщик итератора и возможности цикла for-each
   */
  IList<IDependencyInfo> listDependencies();

  /**
   * Возвращает набор других свойств, связанных с плагином.
   * <p>
   * С каждим плагином может быть связан набор именованных строк, которые хранятся в главном (и единственном разделе)
   * манифеста.
   * <p>
   * В возвращаемой карте содержаться все свойства из главного раздела манифеста, кроме перечисленных в
   * {@link IPluginsHardConstants}.MF_XXX.
   *
   * @return IStringMap&gt;String&lt; - карта свойств "имя совйства" - "значение свойства"
   */
  IStringMap<String> userProperties();

}
