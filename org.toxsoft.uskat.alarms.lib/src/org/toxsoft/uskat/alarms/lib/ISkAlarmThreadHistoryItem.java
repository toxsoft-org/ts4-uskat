package org.toxsoft.uskat.alarms.lib;

import org.toxsoft.core.tslib.av.opset.*;
import org.toxsoft.core.tslib.av.utils.*;
import org.toxsoft.core.tslib.bricks.time.*;

/**
 * Элемент истории выполнения этапов нитки оповещения по тревоге.
 *
 * @author goga
 */
public interface ISkAlarmThreadHistoryItem
    extends ITimestampable, IParameterized {

  /**
   * Идентификатор несуществующей нитки извещения
   */
  String ALARM_THREAD_NULL = "alarm.thread.null"; //$NON-NLS-1$

  /**
   * Возвращает идентификатор (ИД-путь) нитки извещения.
   * <p>
   * Идентификатор нитки извещения является идентифиатором способа извещения, с добавлением идентификации нитки внутри
   * данного способа. Дело в том, что одним способом можно запустить несколько ниток оповещения (например, email
   * рассылка может породить нитки отдельно для извещения главного инженера и начальника службы безопасности). Главное,
   * чтобы возможные нитки имели разные идентификаторы внутри истрии одной тревоги.
   *
   * @return String - идентификатор (ИД-путь) нитки извещения
   */
  String announceThreadId();

  /**
   * Возвращает параметры выполнения этапа.
   * <p>
   * Конкретный состав и значения параметров зависит от способа извещения. Параметры заполняются и анализируются модулем
   * соответствующего способа извещения. Служба тревог "не вникает" в значения параметров.
   *
   * @return {@link IOptionSet} - параметры выполнения этапа
   */
  @Override
  IOptionSet params();

}
